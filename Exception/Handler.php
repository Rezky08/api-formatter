<?php

namespace Rezky\LaravelResponseFormatter\Exception;

use App\Exceptions\Handler as LaravelHandler;
use Illuminate\Auth\AuthenticationException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Database\QueryException;
use Illuminate\Http\Response as LaravelResponse;
use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpKernel\Exception\HttpException;
use Rezky\LaravelResponseFormatter\Http\Response as RezkyResponse;
use Rezky\LaravelResponseFormatter\Exception\Error as RezkyError;

class Handler extends LaravelHandler {
    protected $allowEnvReport = [
        'local',
        'staging'
    ];


    /**
     * @param \Illuminate\Http\Request $request
     * @param \Throwable $e
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Response|\Symfony\Component\HttpFoundation\Response
     * @throws \Throwable
     */
    public function render($request, \Throwable $e)
    {
        if (in_array(\config('app.env'),$this->allowEnvReport)){
            $data = [
                'message' => $e->getMessage()
            ];
        }else{
            $data = [];
        }

        if ($request->expectsJson()){
            switch (true){
                case $e instanceof QueryException:
                    /** @var QueryException $e */
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR,$data);
                    break;
                case $e instanceof ValidationException:
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR_INVALID_DATA,$e->errors());
                    break;
                case $e instanceof AuthenticationException:
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR_UNAUTHENTICATED,$data);
                    break;
                case $e instanceof ModelNotFoundException:
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR_RESOURCE_NOT_FOUND,$data,$e);
                    break;
                case $e instanceof \ArgumentCountError:
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR,$data);
                    break;
                case $e instanceof \Error:
                    /** @var $e \Error */
                    $data = $e->getTrace();
                    $e = RezkyError::make(RezkyResponse::CODE_ERROR,$data,$e->getMessage());
                    break;
                case $e instanceof HttpException:
                    switch ($e->getStatusCode()){
                        case LaravelResponse::HTTP_NOT_FOUND:
                            $e = RezkyError::make(RezkyResponse::CODE_ERROR_ROUTE_NOT_FOUND,$data);
                            break;
                        case LaravelResponse::HTTP_UNAUTHORIZED:
                            $e = RezkyError::make(RezkyResponse::CODE_ERROR_UNAUTHENTICATED,$data);
                            break;
                        case LaravelResponse::HTTP_FORBIDDEN:
                            $e = RezkyError::make(RezkyResponse::CODE_ERROR_UNAUTHORIZED,$data);
                            break;
                        case LaravelResponse::HTTP_INTERNAL_SERVER_ERROR:
                            $e = RezkyError::make(RezkyResponse::CODE_ERROR,$data);
                            break;
                    }
            }
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }

}